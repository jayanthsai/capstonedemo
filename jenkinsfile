pipeline {
   agent any
   stages{
      stage('git clone'){
	      steps {
		      git branch: 'master',
                credentialsId: '03daf977-4845-423e-9fb7-940c7dd52c03',
                url: 'https://github.com/jayanthsai/capstonedemo.git'
		  }
	  }
	  stage ('sonar analysis'){
	      steps{
		  script{
		      bat '''
			  call sonar.bat
			  '''
			  
			  }
		  }
	  }
	  
	  stage ('docker build image service1'){
	       steps{
		     script {
			  withDockerRegistry(credentialsId: 'docker',  url: "") {
			  bat '''
                          cd service1
                          docker build -t integratordevops/helloservice1:%BUILD_NUMBER% .  
                          docker push integratordevops/helloservice1:%BUILD_NUMBER%
                          '''
			 }
			 }
		   }
	  }

          stage ('docker build image service2'){
	       steps{
		     script {
			  
			  bat '''
                          cd service2
                          docker build -t integratordevops/welcomeservice2:%BUILD_NUMBER% .  
                          docker push integratordevops/welcomeservice2:%BUILD_NUMBER%
                          '''
			 
			 }
		   }
	  }
        
stage('login to gcloud'){
        steps{
            script{
			    
				withEnv(['GCLOUD_HOME=C:\\Users\\vveeravenkatasury\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin']) {
				withCredentials([file(credentialsId: 'capstoneprojectkey', variable: 'GC_KEY')]) {
				bat '''
                gcloud auth activate-service-account --key-file=%GC_KEY%
				
				'''
                }
               } 
			}	
        }
    } 
      stage('connect to GKE cluster'){
        steps{
            script{
			    
				withEnv(['GCLOUD_HOME=C:\\Users\\vveeravenkatasury\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin']) {
				bat '''
                
                gcloud container clusters get-credentials kubecluster --zone us-central1-c --project capstone-355709
				
				'''
               } 
			}	
        }
    } 	
      stage('deploy to GKE cluster'){
        steps{
            script{
				bat '''
                
				kubectl apply -f ./kubernetes
				kubectl set image deployments/service1-deployment helloworld=integratordevops/helloservice1:%BUILD_NUMBER% -n helloworld
				kubectl set image deployments/service2-deployment welcome=integratordevops/welcomeservice2:%BUILD_NUMBER% -n welcome
				''' 
			}	
        }
    }
stage ('docker remove image') {
        steps{
            script{
                bat '''
                    docker rmi integratordevops/helloservice1:%BUILD_NUMBER%  
                    docker rmi integratordevops/welcomeservice2:%BUILD_NUMBER%
                    '''  
                }  
            }
}	
   }
}